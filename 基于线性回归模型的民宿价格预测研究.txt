本次实验就需要根据民宿基本信息数据预测民宿价格，根据本实验帮助大家了解数据分析的流程。该实验具体要达到如下目标：
1）	了解数据分析的流程，能够根据业务背景确定数据分析的目的与需求；
2）	能够使用Pandas进行数据清洗
3）	能够使用matplotlib进行数据可视化
4）	能够使用sklearn进行线性回归拟合

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import Pipeline

# 加载数据集
train_filePath="train_data.csv"
test_filePath="test_data.csv"
result_filePath="result_data.csv"
train_data=pd.read_csv(train_filePath)
test_data=pd.read_csv(test_filePath)

# 将房主回复率从字符串类型转为数值型
train_data['房主回复率']=train_data['房主回复率'].apply(lambda x:None if str(x)=='nan' else int(str(x)[:-1])/100)
test_data['房主回复率'] = test_data['房主回复率'].apply(lambda x: None if str(x)=='nan' else int(str(x)[:-1])/100)
data_id = test_data['数据ID']

def fill_nan(data):
    # 使用均值填充nan值
    column_names = data.columns
    for name in column_names:
        mean = data[name].mean()
        data[name] = data[name].fillna(value=mean)
    return data

# 去除非数值型数据
no_str_columns = train_data.iloc[:,1:].select_dtypes(exclude='object').columns
train_data = train_data[no_str_columns.tolist()]
no_str_columns = test_data.iloc[:,1:].select_dtypes(exclude='object').columns
test_data = test_data[no_str_columns.tolist()]

test_data = fill_nan(test_data)
train_data = fill_nan(train_data)

# 训练数据集划分
x_data = train_data.iloc[:,:-1]
y_data = train_data.iloc[:,-1]

# 构建模型


pipe = Pipeline(steps=[('preprocessing', StandardScaler()), ('linear_regression', LinearRegression())])
pipe.fit(x_data.to_numpy(), y_data.to_numpy())

# 模型预测
out = pipe.predict(test_data.to_numpy())

# 保存预测结果
df = pd.DataFrame({
    '数据ID': data_id,
    '价格': out
})
print(df.head(10))

df.to_csv(result_filePath, index=False)